const ENCODING_BASE=55203,ENCODING_BASE_CHAR_CODE=93,MAX_CAPACITY=ENCODING_BASE*ENCODING_BASE;function calculateTotalStrings(t,e,n){if(t<=0||e<=0)return 0;if(1===t)return e>n?1/0:e;let o=0,r=t;for(let i=1;i<=e;i++){if(o+=r,o>n)return 1/0;if(i<e){if(r>n/t)return 1/0;r*=t}}return o}function findMaxPossibleLength(t,e){if(t<=1)return e;let n=1,o=2e3,r=0;for(;n<=o;){const i=n+Math.floor((o-n)/2);if(0===i)break;calculateTotalStrings(t,i,e)<=e?(r=i,n=i+1):o=i-1}return r}function encodeIndexToUnicode(t){const e=Math.floor(t/ENCODING_BASE),n=t%ENCODING_BASE;return String.fromCodePoint(ENCODING_BASE_CHAR_CODE+e)+String.fromCodePoint(ENCODING_BASE_CHAR_CODE+n)}function decodeUnicodeToIndex(t){const e=t.codePointAt(0)-ENCODING_BASE_CHAR_CODE,n=t.codePointAt(1)-ENCODING_BASE_CHAR_CODE;return e*ENCODING_BASE+n}const ID_ALPHABET_CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-",ID_ALPHABET=Array.from(new Set(ID_ALPHABET_CHARS)).sort().join(""),IdCodec=(()=>{const t=ID_ALPHABET,e=t.length,n=new Map(t.split("").map(((t,e)=>[t,e]))),o=findMaxPossibleLength(e,MAX_CAPACITY),r=calculateTotalStrings(e,o,MAX_CAPACITY);if(0===o)throw new Error("The predefined alphabet is too large for the encoding capacity.");return{alphabet:t,alphabetSize:e,L_max:o,totalStrings:r,getIndexByString(t){const e=t.length;if(0===e||e>this.L_max)throw new Error(`String "${t}" (length ${e}) is invalid.`);const o=e>1?calculateTotalStrings(this.alphabetSize,e-1,MAX_CAPACITY):0;let r=0;for(let e=0;e<t.length;e++){const o=t[e];if(!n.has(o))throw new Error(`Invalid character "${o}" not in ID alphabet.`);const i=t.length-1-e;r+=n.get(o)*Math.pow(this.alphabetSize,i)}return o+r},getStringByIndex(t){if(t<0||t>=this.totalStrings)throw new Error(`Index ${t} is out of bounds.`);let e=1,n=0;for(;;){const o=Math.pow(this.alphabetSize,e);if(t<n+o)break;n+=o,e++}let o=t-n,r="";for(let t=e-1;t>=0;t--){const e=Math.pow(this.alphabetSize,t),n=Math.floor(o/e);r+=this.alphabet[n],o%=e}return r}}})();function encodeIds(t){const e=IdCodec.L_max;if(0===e)throw new Error("Cannot encode: Codec not initialized correctly.");let n="";for(let o=0;o<t.length;o+=e){const r=t.substring(o,o+e);n+=encodeIndexToUnicode(IdCodec.getIndexByString(r))}return n}function decodeIds(t){let e="";for(let n=0;n<t.length;n+=2){const o=decodeUnicodeToIndex(t.substring(n,n+2));e+=IdCodec.getStringByIndex(o)}return e}

